---
import Section from './Section'
import Block from './Block'
import Intro from './Intro'
---
<Section title="Skills" id="skills" class="skills" data-color="skills" data-name="skills">
  <div class="grid gap-12 justify-start items-start">
    <Intro className="intro">
      <p>
        Having worked as a full-stack / front-end developer for more than 10
        years I've gathered a rather broad skillset. While I prefer front-end
        work I'm comfortable with back-end work as well.
      </p>
    </Intro>
    <Block title="Front-end" className="frontend">
      In my current job I code a lot of <em data-icon="react">React</em> and <em data-icon="vue">Vue</em> 
      written in modern <em data-icon="typescript">typescript</em>. But also a fair bit of <em data-icon="elm">elm</em>.
      For styling, <em data-icon="scss">SCSS</em>, <em>styled-components</em>,
      <em>modular css</em> or whatever fits the projects the best. To bake it
      all nicely <em data-icon="webpack">Webpack</em>,
      <em data-icon="babel">Babel</em>, <em>PostCSS</em> and other nice tools
      are used. In the end it all results in <em data-icon="html5">HTML5</em>,
      <em data-icon="css3">CSS3</em> and <em data-icon="js">Javascript</em>. I
      currently much prefer <em data-icon="jest">Jest</em> for front-end testing.

      I'm comfortable with most ways of talking with a backend, from <em>REST</em> to <em data-icon="graphql">graphql</em> to <em>gRPC</em>.
    </Block>
    <Block title="Back-end" className="backend">
      Lately I've preferred writing small
      <em data-icon="node">node.js</em> based backends, micro-services if you
      so will. But I've also worked with <em data-icon="ruby">Ruby</em> on
      <em data-icon="rails">Rails</em>, <em data-icon="php">PHP</em> and even
      some <em data-icon="python">Python</em> and
      <em data-icon="java">Java</em> and lately even some <em data-icon="kotlin">Kotlin</em>.
    </Block>
    <Block title="Servers" className="server">
      If I get to decide I like to ship it all as a
      <em data-icon="docker">docker</em> image. Second best is to push it all
      to <em data-icon="heroku">Heroku</em>, <em>Netlify</em> or <em>Vercel</em>. I'm also confortable setting up a
      <em>Linux</em> server but try to stay away from <em data-icon="windows">Windows</em>.
    </Block>
    <Block title="Databases" className="databases">
      I've worked in plenty of projects using both
      <em data-icon="mysql">SQL</em> (I know there's other sql dialecs as well
      but come on, My is the best name) and <em>NoSQL</em> databases. From
      designing database schemas to using and adopting existing. I've read
      about <em>BCNF</em> at university but used it to little to remember the
      exact definition.
    </Block>
    <Block title="Design" className="design">
      While I'm in no way a designer I'm comfortable in several design tools
      such as <em data-icon="sketch">Sketch</em> and <em data-icon="photoshop">Photoshop</em>.
    </Block>
    <Block title="Tools" className="tools">
      I'm one of those wannabe <em data-icon="vim">Vim</em> users, but in all
      honesty I also use <em data-icon="vs">VS Code</em> a lot. For code versioning I prefer
      <em data-icon="git">Git</em>.
    </Block>

    <Block title="More I've worked with" className="rest" maxWidth={false}>
      <em data-icon="bootstrap">bootstrap</em>,
      <em data-icon="circleci">circleci</em>,
      <em data-icon="codeigniter">codeigniter</em>,
      <em data-icon="coffeescript">coffeescript</em>,
      <em data-icon="drupal">drupal</em>,
      <em data-icon="express">express</em>,
      <em data-icon="firebase">firebase</em>,
      <em data-icon="gatsby">gatsby</em>,
      <em data-icon="github">github</em>,
      <em data-icon="googlecloud">googlecloud</em>,
      <em data-icon="jquery">jQuery</em>,
      <em data-icon="kubernetes">kubernetes</em>,
      <em data-icon="mocha">mocha</em>,
      <em data-icon="mongodb">mongodb</em>,
      <em data-icon="nextjs">nextjs</em>,
      <em data-icon="nginx">nginx</em>,
      <em data-icon="tailwindcss">tailwindcss</em>,
      <em data-icon="wordpress">wordpress</em>
    </Block>
  </div>
</Section>

<style lang="scss">
.grid {
  grid-template-rows: max-content;
  grid-template-columns: 1fr 1fr 1fr 1fr;
  grid-template-areas:
    'intro intro server server'
    'frontend frontend databases design'
    'frontend frontend databases tools'
    'backend backend databases tools'
    'rest rest rest rest';

  @media only screen and (max-width: 830px) {
    grid-template-columns: 1fr;
    grid-template-areas: 'intro' 'frontend' 'backend' 'databases' 'design' 'server' 'tools' 'rest';
  }
}

</style>

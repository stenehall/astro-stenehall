---
export interface Props {
  title: string,
  link: string,
  start: string,
  end: string,
  techy: array,
  logo: string,
  logoWidth: string,
  logoHeight: string,
  index: number
}

const { title, logo, logoWidth, logoHeight, link, start, end, techy, isActive, index } = Astro.props;

const readableDate = (dateStr: string) => {
  if (dateStr) {
    const options = { year: 'numeric', month: 'long', day: 'numeric' }
    return new Date(dateStr).toLocaleDateString('en', options)
  } else {
    return 'Present'
  }
}

---
<div class={`work ${index % 2 ? 'odd' : 'even'}`}>
  <!-- <img
    class="cursor-pointer"
    height={logoHeight}
    width={logoWidth}
    data-src={`/icons/${logo}.svg`}
    alt={title}
  /> -->
  <div class="date">
    <time datetime={start}>{ readableDate(start) }</time> -
    <time datetime={end}>{ readableDate(end) }</time>
  </div>
  <div class="desc">
    <h3><a href={link} title={title}>{ title }</a></h3>
    <slot />
    <ul class="mt-2">
      <li><strong>Techy words:</strong></li>
      {techy.map((item, id) => <li key={id}>
        { item }
      </li>)}
    </ul>
  </div>
</div>
<style lang="scss">
img {
  height: 2em;
  width: auto;
}

.work {
  display: grid;
  grid-template-columns: 1fr 1fr;
  grid-template-areas: "date desc";
}

.work.even {
  grid-template-areas: "desc date";
}

.date {
  padding: 3rem 1rem 0;
  border-right: 3px solid blue;
  text-align: right;
  position: relative;
  grid-area: date;
}

.even {
  .date {
    border: none;
    text-align: left;

    &::after {
      left: -7px;
    }
  }

  .desc {
    border-right: 3px solid blue;
    text-align: right;
  }
}

.date::after {
  box-shadow: 0 0 0 4px #004ffc;
  right: -7px;
  background: #fff;
  border-radius: 50%;
  height: 11px;
  width: 11px;
  content: "";
  top: calc(3rem + 11px);
  position: absolute;
}

.desc {
  padding: 3rem 1rem 0;
  grid-area: desc;
}

time {
  font-size: 0.8rem;
  line-height: 2rem;
  font-style: italic;
}
img {
  height: 2em;
  width: auto;
}
ul {
  padding: 0;
  font-size: 0.8rem;
}
li {
  display: inline;
}
li::after {
  content: ', ';
}
li:last-child::after {
  content: '';
}
p + p {
  margin-top: 1rem;
}
.hidden {
  display: none;
}
</style>
